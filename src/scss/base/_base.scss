.wrapper {
  max-width: 1920px;
  width: 100%;
  margin: 0 auto;
}

body {
  font: 400 17px/1.25 $main-font;
  color: $dark;
  font-feature-settings: 'pnum' on, 'lnum' on;
  @include respond-to($sm) {
    font-size: 16px;
  }

  &.modal_open {
    overflow: hidden;
    height: 100%;
  }
}

.hide {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.clearfix:after {
  content: '';
  clear: both;
  display: block;
}

.bg_dark {
  background-color: $dark;
  background-image: url(../assets/img/bg-dark.svg);
  background-repeat: repeat;
  background-size: contain;
  background-position: center 0;
}

.d-flex {
  display: flex;
}

.main {
  padding-top: 135px;
  @include respond-to($lg) {
    padding-top: 85px;
  }
}


.dynamic-content {
  p {
    font-size: 17px;
    margin-bottom: 30px;

    &:last-child {
      margin-bottom: 0;
    }

    @include respond-to($sm) {
      font-size: 16px;
    }
  }
}

.lightbox {
  display: flex;
  flex-direction: column-reverse;
  height: 100%;
  justify-content: center;

  .lb-nav a {
    opacity: 1;
  }

  .lb-dataContainer {
    position: fixed;
    left: 0;
    right: 0;
    top: 0;
    padding: 10px;
    width: 100% !important;
    display: block !important;
    opacity: 1 !important;
  }
}


.overlay {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.45);
  z-index: 1000;
}

svg g.ww {
  pointer-events: all;

  &:hover {
    filter: drop-shadow(13px 13px 13px rgba(225, 220, 0, .3));

    > g:not(:first-child) path {
      transition: .35s;
      fill: red !important;

    }
  }
}
  .ddd {
    transition: .35s;
    fill: red !important;
    filter: drop-shadow( 13px 13px 13px rgba(225, 220, 0, .3));
  }





.aaa {
  background-color: blue;
}

